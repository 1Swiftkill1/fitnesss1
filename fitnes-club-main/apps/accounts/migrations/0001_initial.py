# Generated by Django 5.0.2 on 2024-02-17 12:29

import apps.common.utils
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=60, null=True, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='логин')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='ФИО')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Последний вход')),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер телефона')),
                ('card_type', models.CharField(choices=[('lite', 'Lite'), ('space', 'Space'), ('flex', 'Flex')], default='lite', max_length=10, verbose_name='Тип карты')),
                ('code', models.CharField(default=apps.common.utils.generate_random_code, max_length=8, unique=True)),
                ('data_activate', models.DateField(auto_now_add=True, verbose_name='Дата активации')),
                ('data_expired', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Админ')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Суперпользователь')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users/%Y/%m/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics')),
                ('address', models.CharField(blank=True, max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
                'ordering': ['-id'],
            },
        ),
    ]
